name: Deploy to ECS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 454626435046.dkr.ecr.us-east-1.amazonaws.com

      - name: Build and Push Docker image
        run: |
          IMAGE_NAME="454626435046.dkr.ecr.us-east-1.amazonaws.com/threatened-species"
          docker build -t threatened-species .
          docker tag threatened-species:latest $IMAGE_NAME:latest
          docker push $IMAGE_NAME:latest

      - name: Update ECS Service
        run: |
          # 1) Create the new task definition JSON file
          cat <<EOF > task-def.json
          {
            "family": "my-ecs-task",
            "executionRoleArn": "arn:aws:iam::454626435046:role/LabRole",
            "networkMode": "awsvpc",
            "containerDefinitions": [
              {
                "name": "threatened-species",
                "image": "454626435046.dkr.ecr.us-east-1.amazonaws.com/threatened-species",
                "essential": true,
                "portMappings": [
                  {
                    "containerPort": 3000,
                    "hostPort": 3000
                  }
                ]
              }
            ],
            "requiresCompatibilities": [
              "FARGATE"
            ],
            "cpu": "256",
            "memory": "512"
          }
          EOF

          # 2) Register the new task definition
          NEW_TASK_DEF=$(aws ecs register-task-definition --cli-input-json file://task-def.json)
          NEW_REVISION=$(echo "$NEW_TASK_DEF" | jq -r '.taskDefinition.revision')

          echo "New task definition revision: $NEW_REVISION"

          # 3) Update the ECS service to use the new revision
          aws ecs update-service \
            --cluster threatened-species-cluster \
            --service threatened-species-service \
            --task-definition "${TASK_FAMILY}:${NEW_REVISION}" \
            --force-new-deployment

          echo "Service updated to use task definition revision ${NEW_REVISION}."
